import &StandardImport, &ElementFactory

class Element extends &ElementDrawMixin BaseClass

  @postCreateConcreteClass: ->
    elementFactory.register @

  constructor: (props, children) ->
    @_reset props, children

  @getter
    "children"
    inspectedObjects: ->
      if @children
        []
          :Element
          array child in @children with child.inspectedObjects
      else
        :Element

    bitmap: ->
      @_draw
        new NanoBitmap @_currentSize_x, @_currentSize_y
        1
        1
        0
        0
        0
        0

  emptyObject = {}
  _reset: (props, children) ->
    props ?= emptyObject
    @_currentSize_x     = props.size_x            ? 100
    @_currentSize_y     = props.size_y            ? 100

    @_e2p_xx            = props.e2p_xx            ? 1
    @_e2p_yy            = props.e2p_yy            ? 1
    @_e2p_xy            = props.e2p_xy            ? 0
    @_e2p_yx            = props.e2p_yx            ? 0
    @_e2p_x1            = props.e2p_x1            ? 0
    @_e2p_y1            = props.e2p_y1            ? 0

    # I'd like the option to inline up to, say. array-size-5s for _drawConstants and _drawCommands.
    # @_drawConstants =
    # @_drawCommands =
    # @_drawStrings =
    @_drawFunction      = props.draw              ? 0
    @_children          = if children?.length > 0 then children else null

##
  Element

    draw: ->
      @color #ff8
      @fill()
      @drawChild :foobar

