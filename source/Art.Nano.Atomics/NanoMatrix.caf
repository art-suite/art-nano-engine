import &StandardImport, &NanoPoint

class NanoMatrix extends &NanoAtomicBase
  ##
    Field Naming Key:

      First-character:  output point-slot in transform
      Second-character: multiplied-by-value-from-input-point

    Transform:
      x_out: x1 + xx * x_in + xy * y_in
      y_out: y1 + yx * x_in + yy * y_in

  @createAtomic
    fields:   :x1 :y2 :xx :yy :xy :yx
    defaults: 0   0   1   1   0   0

  @nanoMatrixTransform: (x1, y1, xx, yy, xy, yx, x, y) ->
    nanoPointWithReusableResult
      x1 + xx * x + xy * y
      y1 + yx * x + yy * y
